@{
    ViewData["Title"] = "Servers";
    ViewData["ServerId"] = ViewBag.Server.Id;
    ViewData["ServerName"] = "- " + ViewBag.Server.Title;
    ViewData["Error"] = ViewBag.Error;
}

<h1>Console</h1>
<hr>
<table width="600" cellspacing="0">
    <tbody>
        <tr>
            @if (ViewData["Error"] is not null)
            {
                <td>
                    <h2>@ViewData["Error"]</h2>
                </td>
            }
            <td bgcolor="#cccccc">
                [<b>@ViewData["ServerName"]</b>]
                <table>
                    <tbody>
                        <tr>
                            [<button type="button" id="start-btn" style="background-color:#4CAF50;">Start</button>]
                        </tr>
                        <tr>
                            [<button type="button" id="stop-btn" style="background-color:#f44336;">Stop</button>]
                        </tr>
                        <tr>
                            [<button type="button" id="restart-btn" style="background-color:#ffff00;">Restart</button>]
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
        <tr>
            <td bgcolor="#000000">
                <textarea disabled="disabled">Server is offline...</textarea>
            </td>
        </tr>
        <tr>
            <td bgcolor="#cccccc">
                <form id="command">
                    <input id="command-text" type="text" name="Send Commands"> 
                    <input type="submit">
                </form>
            </td>
        </tr>
    </tbody>
</table>

<script>
    const startButton = document.getElementById('start-btn');

    startButton.addEventListener('click', async _ => {
    try {     
        const response = await fetch('/Server/Start/@ViewData["ServerId"]', {
        method: 'post'
        });
        return;
    } catch(err) {
        return;
    }
    });
</script>
<script>
    const stopButton = document.getElementById('stop-btn');

    stopButton.addEventListener('click', async _ => {
    try {     
        const response = await fetch('/Server/Stop/@ViewData["ServerId"]', {
        method: 'post'
        });
        return;
    } catch(err) {
        return;
    }
    });
</script>
<script>
    const forcestopButton = document.getElementById('restart-btn');

    forcestopButton.addEventListener('click', async _ => {
    try {     
        const response = await fetch('/Server/Restart/@ViewData["ServerId"]', {
        method: 'post'
        });
        return;
    } catch(err) {
        return;
    }
    });
</script>
<script>
    const commandButton = document.getElementById('command');
    const command = document.getElementById( "command-text" );

    commandButton.addEventListener('submit', async _ => {
    try {     
        const response = await fetch(`/Server/Command/@ViewData["ServerId"]/${command}`, {
        method: 'post',
        });
        return;
    } catch(err) {
        return;
    }
    });
</script>